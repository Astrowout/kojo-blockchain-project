{
  "_format": "hh-sol-artifact-1",
  "contractName": "KojoUtils",
  "sourceName": "contracts/utils/KojoUtils.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "levelCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "level",
          "type": "uint256"
        }
      ],
      "name": "calculateParticipantLevelCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "experiencePoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "plantIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "allowedTokenBalance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPresent",
              "type": "bool"
            }
          ],
          "internalType": "struct Structs.Participant",
          "name": "participant",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "levelCost",
          "type": "uint256"
        }
      ],
      "name": "handleAddXPToParticipant",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "experiencePoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "plantIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "allowedTokenBalance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPresent",
              "type": "bool"
            }
          ],
          "internalType": "struct Structs.Participant",
          "name": "_participant",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "typeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "experiencePoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lifes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "levelCost",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPresent",
              "type": "bool"
            }
          ],
          "internalType": "struct Structs.Plant",
          "name": "plant",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "handleAddXPToPlant",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "typeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "experiencePoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lifes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "levelCost",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPresent",
              "type": "bool"
            }
          ],
          "internalType": "struct Structs.Plant",
          "name": "_plant",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "typeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "experiencePoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lifes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "levelCost",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPresent",
              "type": "bool"
            }
          ],
          "internalType": "struct Structs.Plant",
          "name": "plant",
          "type": "tuple"
        }
      ],
      "name": "handleBuildURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "experiencePoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "plantIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "allowedTokenBalance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPresent",
              "type": "bool"
            }
          ],
          "internalType": "struct Structs.Participant",
          "name": "participant",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "handleCalculateAllowedTokenBalanceFromParticipantLevel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "experiencePoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "plantIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "allowedTokenBalance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPresent",
              "type": "bool"
            }
          ],
          "internalType": "struct Structs.Participant",
          "name": "participant",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "handleRemoveTokenIdFromParticipant",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "experiencePoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "plantIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "allowedTokenBalance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPresent",
              "type": "bool"
            }
          ],
          "internalType": "struct Structs.Participant",
          "name": "_participant",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "toString",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610eea806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806371aad10d1161005b57806371aad10d146101295780639199a30b1461013c578063b13a4dce1461014f578063ffa029dd1461016f57600080fd5b80632424a0e914610082578063691fa646146100a85780637182817b14610109575b600080fd5b6100956100903660046108f4565b610182565b6040519081526020015b60405180910390f35b6100bb6100b63660046109fa565b6101ad565b60405161009f9190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a0830151151560a083015292915050565b61011c610117366004610a25565b61025b565b60405161009f9190610a71565b61011c610137366004610aa4565b610411565b61009561014a366004610c17565b61062a565b61016261015d366004610c5c565b610664565b60405161009f9190610caa565b61016261017d366004610c17565b6106ea565b600080610190600184610d51565b61019b90600a610d68565b6101a59085610d87565b949350505050565b6101e86040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b81836040018181516101fa9190610d87565b9052506080830151604084015160009161021391610db5565b61021e906001610d87565b9050600181118015610231575060058111155b156102425760208401819052610253565b600581111561025357600560208501525b509192915050565b60608160a001516102ab5760405162461bcd60e51b8152602060048201526015602482015274283630b73a103237b2b9903737ba1032bc34b9ba1760591b60448201526064015b60405180910390fd5b8160200151600114806102c2575081602001516002145b806102d1575081602001516003145b806102e0575081602001516004145b806102ef575081602001516005145b61033b5760405162461bcd60e51b815260206004820152601b60248201527f506c616e74206c6576656c20646f6573206e6f742065786973742e000000000060448201526064016102a2565b816060015160011480610352575081606001516002145b80610361575081606001516003145b6103ad5760405162461bcd60e51b815260206004820152601b60248201527f506c616e74206c6966657320646f6573206e6f742065786973742e000000000060448201526064016102a2565b6000604051806080016040528060448152602001610e716044913990506000816103da85600001516107f6565b6103e786602001516107f6565b6040516020016103f993929190610dc9565b60408051601f19818403018152919052949350505050565b60408051808201909152601081526f181899199a1a9b1b9c1cb0b131b232b360811b602082015281516060919060009061044c906002610d68565b610457906002610d87565b67ffffffffffffffff81111561046f5761046f610916565b6040519080825280601f01601f191660200182016040528015610499576020820181803683370190505b509050600360fc1b816000815181106104b4576104b4610e2b565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106104e3576104e3610e2b565b60200101906001600160f81b031916908160001a90535060005b84518110156106225782600486838151811061051b5761051b610e2b565b016020015182516001600160f81b031990911690911c60f81c90811061054357610543610e2b565b01602001516001600160f81b0319168261055e836002610d68565b610569906002610d87565b8151811061057957610579610e2b565b60200101906001600160f81b031916908160001a905350828582815181106105a3576105a3610e2b565b602091010151815160f89190911c600f169081106105c3576105c3610e2b565b01602001516001600160f81b031916826105de836002610d68565b6105e9906003610d87565b815181106105f9576105f9610e2b565b60200101906001600160f81b031916908160001a9053508061061a81610e41565b9150506104fd565b509392505050565b6000600a6001846000015161063f9190610d51565b6106499084610d68565b6106539190610db5565b61065d9083610d87565b9392505050565b61069f6040518060c0016040528060008152602001600081526020016000815260200160608152602001600081526020016000151581525090565b82846020018181516106b19190610d87565b90525060208401516000906106c7908490610db5565b6106d2906001610d87565b905060018111156106e1578085525b50929392505050565b6107256040518060c0016040528060008152602001600081526020016000815260200160608152602001600081526020016000151581525090565b600060018460600151516107399190610d51565b67ffffffffffffffff81111561075157610751610916565b60405190808252806020026020018201604052801561077a578160200160208202803683370190505b50905060005b8460600151518110156107e9576000856060015182815181106107a5576107a5610e2b565b602002602001015190508481146107d657808383815181106107c9576107c9610e2b565b6020026020010181815250505b50806107e181610e41565b915050610780565b5060608401525090919050565b60608161081a5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610844578061082e81610e41565b915061083d9050600a83610db5565b915061081e565b60008167ffffffffffffffff81111561085f5761085f610916565b6040519080825280601f01601f191660200182016040528015610889576020820181803683370190505b5090505b84156101a55761089e600183610d51565b91506108ab600a86610e5c565b6108b6906030610d87565b60f81b8183815181106108cb576108cb610e2b565b60200101906001600160f81b031916908160001a9053506108ed600a86610db5565b945061088d565b6000806040838503121561090757600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561094f5761094f610916565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561097e5761097e610916565b604052919050565b8035801515811461099657600080fd5b919050565b600060c082840312156109ad57600080fd5b6109b561092c565b905081358152602082013560208201526040820135604082015260608201356060820152608082013560808201526109ef60a08301610986565b60a082015292915050565b60008060e08385031215610a0d57600080fd5b610a17848461099b565b9460c0939093013593505050565b600060c08284031215610a3757600080fd5b61065d838361099b565b60005b83811015610a5c578181015183820152602001610a44565b83811115610a6b576000848401525b50505050565b6020815260008251806020840152610a90816040850160208701610a41565b601f01601f19169190910160400192915050565b60006020808385031215610ab757600080fd5b823567ffffffffffffffff80821115610acf57600080fd5b818501915085601f830112610ae357600080fd5b813581811115610af557610af5610916565b610b07601f8201601f19168501610955565b91508082528684828501011115610b1d57600080fd5b8084840185840137600090820190930192909252509392505050565b600060c08284031215610b4b57600080fd5b610b5361092c565b9050813581526020808301358183015260408301356040830152606083013567ffffffffffffffff80821115610b8857600080fd5b818501915085601f830112610b9c57600080fd5b813581811115610bae57610bae610916565b8060051b9150610bbf848301610955565b8181529183018401918481019088841115610bd957600080fd5b938501935b83851015610bf757843582529385019390850190610bde565b60608701525050505050608082810135908201526109ef60a08301610986565b60008060408385031215610c2a57600080fd5b823567ffffffffffffffff811115610c4157600080fd5b610c4d85828601610b39565b95602094909401359450505050565b600080600060608486031215610c7157600080fd5b833567ffffffffffffffff811115610c8857600080fd5b610c9486828701610b39565b9660208601359650604090950135949350505050565b6000602080835260e0830184518285015281850151604085015260408501516060850152606085015160c06080860152818151808452610100870191508483019350600092505b80831015610d115783518252928401926001929092019190840190610cf1565b50608087015160a087015260a08701519350610d3160c087018515159052565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610d6357610d63610d3b565b500390565b6000816000190483118215151615610d8257610d82610d3b565b500290565b60008219821115610d9a57610d9a610d3b565b500190565b634e487b7160e01b600052601260045260246000fd5b600082610dc457610dc4610d9f565b500490565b60008451610ddb818460208901610a41565b845190830190610def818360208901610a41565b602d60f81b91019081528351610e0c816001840160208801610a41565b64173539b7b760d91b6001929091019182015260060195945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610e5557610e55610d3b565b5060010190565b600082610e6b57610e6b610d9f565b50069056fe68747470733a2f2f697066732e696f2f697066732f516d61796a32626f3234316f443258726b637064386737367573666e4b3673624c74395a7576554a346b3661586a2fa264697066735822122021ac5ee82e2a8950ebb96991762c640c8442227e8b4cf56a8fff3987d60c94f564736f6c634300080c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c806371aad10d1161005b57806371aad10d146101295780639199a30b1461013c578063b13a4dce1461014f578063ffa029dd1461016f57600080fd5b80632424a0e914610082578063691fa646146100a85780637182817b14610109575b600080fd5b6100956100903660046108f4565b610182565b6040519081526020015b60405180910390f35b6100bb6100b63660046109fa565b6101ad565b60405161009f9190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a0830151151560a083015292915050565b61011c610117366004610a25565b61025b565b60405161009f9190610a71565b61011c610137366004610aa4565b610411565b61009561014a366004610c17565b61062a565b61016261015d366004610c5c565b610664565b60405161009f9190610caa565b61016261017d366004610c17565b6106ea565b600080610190600184610d51565b61019b90600a610d68565b6101a59085610d87565b949350505050565b6101e86040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b81836040018181516101fa9190610d87565b9052506080830151604084015160009161021391610db5565b61021e906001610d87565b9050600181118015610231575060058111155b156102425760208401819052610253565b600581111561025357600560208501525b509192915050565b60608160a001516102ab5760405162461bcd60e51b8152602060048201526015602482015274283630b73a103237b2b9903737ba1032bc34b9ba1760591b60448201526064015b60405180910390fd5b8160200151600114806102c2575081602001516002145b806102d1575081602001516003145b806102e0575081602001516004145b806102ef575081602001516005145b61033b5760405162461bcd60e51b815260206004820152601b60248201527f506c616e74206c6576656c20646f6573206e6f742065786973742e000000000060448201526064016102a2565b816060015160011480610352575081606001516002145b80610361575081606001516003145b6103ad5760405162461bcd60e51b815260206004820152601b60248201527f506c616e74206c6966657320646f6573206e6f742065786973742e000000000060448201526064016102a2565b6000604051806080016040528060448152602001610e716044913990506000816103da85600001516107f6565b6103e786602001516107f6565b6040516020016103f993929190610dc9565b60408051601f19818403018152919052949350505050565b60408051808201909152601081526f181899199a1a9b1b9c1cb0b131b232b360811b602082015281516060919060009061044c906002610d68565b610457906002610d87565b67ffffffffffffffff81111561046f5761046f610916565b6040519080825280601f01601f191660200182016040528015610499576020820181803683370190505b509050600360fc1b816000815181106104b4576104b4610e2b565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106104e3576104e3610e2b565b60200101906001600160f81b031916908160001a90535060005b84518110156106225782600486838151811061051b5761051b610e2b565b016020015182516001600160f81b031990911690911c60f81c90811061054357610543610e2b565b01602001516001600160f81b0319168261055e836002610d68565b610569906002610d87565b8151811061057957610579610e2b565b60200101906001600160f81b031916908160001a905350828582815181106105a3576105a3610e2b565b602091010151815160f89190911c600f169081106105c3576105c3610e2b565b01602001516001600160f81b031916826105de836002610d68565b6105e9906003610d87565b815181106105f9576105f9610e2b565b60200101906001600160f81b031916908160001a9053508061061a81610e41565b9150506104fd565b509392505050565b6000600a6001846000015161063f9190610d51565b6106499084610d68565b6106539190610db5565b61065d9083610d87565b9392505050565b61069f6040518060c0016040528060008152602001600081526020016000815260200160608152602001600081526020016000151581525090565b82846020018181516106b19190610d87565b90525060208401516000906106c7908490610db5565b6106d2906001610d87565b905060018111156106e1578085525b50929392505050565b6107256040518060c0016040528060008152602001600081526020016000815260200160608152602001600081526020016000151581525090565b600060018460600151516107399190610d51565b67ffffffffffffffff81111561075157610751610916565b60405190808252806020026020018201604052801561077a578160200160208202803683370190505b50905060005b8460600151518110156107e9576000856060015182815181106107a5576107a5610e2b565b602002602001015190508481146107d657808383815181106107c9576107c9610e2b565b6020026020010181815250505b50806107e181610e41565b915050610780565b5060608401525090919050565b60608161081a5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610844578061082e81610e41565b915061083d9050600a83610db5565b915061081e565b60008167ffffffffffffffff81111561085f5761085f610916565b6040519080825280601f01601f191660200182016040528015610889576020820181803683370190505b5090505b84156101a55761089e600183610d51565b91506108ab600a86610e5c565b6108b6906030610d87565b60f81b8183815181106108cb576108cb610e2b565b60200101906001600160f81b031916908160001a9053506108ed600a86610db5565b945061088d565b6000806040838503121561090757600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561094f5761094f610916565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561097e5761097e610916565b604052919050565b8035801515811461099657600080fd5b919050565b600060c082840312156109ad57600080fd5b6109b561092c565b905081358152602082013560208201526040820135604082015260608201356060820152608082013560808201526109ef60a08301610986565b60a082015292915050565b60008060e08385031215610a0d57600080fd5b610a17848461099b565b9460c0939093013593505050565b600060c08284031215610a3757600080fd5b61065d838361099b565b60005b83811015610a5c578181015183820152602001610a44565b83811115610a6b576000848401525b50505050565b6020815260008251806020840152610a90816040850160208701610a41565b601f01601f19169190910160400192915050565b60006020808385031215610ab757600080fd5b823567ffffffffffffffff80821115610acf57600080fd5b818501915085601f830112610ae357600080fd5b813581811115610af557610af5610916565b610b07601f8201601f19168501610955565b91508082528684828501011115610b1d57600080fd5b8084840185840137600090820190930192909252509392505050565b600060c08284031215610b4b57600080fd5b610b5361092c565b9050813581526020808301358183015260408301356040830152606083013567ffffffffffffffff80821115610b8857600080fd5b818501915085601f830112610b9c57600080fd5b813581811115610bae57610bae610916565b8060051b9150610bbf848301610955565b8181529183018401918481019088841115610bd957600080fd5b938501935b83851015610bf757843582529385019390850190610bde565b60608701525050505050608082810135908201526109ef60a08301610986565b60008060408385031215610c2a57600080fd5b823567ffffffffffffffff811115610c4157600080fd5b610c4d85828601610b39565b95602094909401359450505050565b600080600060608486031215610c7157600080fd5b833567ffffffffffffffff811115610c8857600080fd5b610c9486828701610b39565b9660208601359650604090950135949350505050565b6000602080835260e0830184518285015281850151604085015260408501516060850152606085015160c06080860152818151808452610100870191508483019350600092505b80831015610d115783518252928401926001929092019190840190610cf1565b50608087015160a087015260a08701519350610d3160c087018515159052565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610d6357610d63610d3b565b500390565b6000816000190483118215151615610d8257610d82610d3b565b500290565b60008219821115610d9a57610d9a610d3b565b500190565b634e487b7160e01b600052601260045260246000fd5b600082610dc457610dc4610d9f565b500490565b60008451610ddb818460208901610a41565b845190830190610def818360208901610a41565b602d60f81b91019081528351610e0c816001840160208801610a41565b64173539b7b760d91b6001929091019182015260060195945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610e5557610e55610d3b565b5060010190565b600082610e6b57610e6b610d9f565b50069056fe68747470733a2f2f697066732e696f2f697066732f516d61796a32626f3234316f443258726b637064386737367573666e4b3673624c74395a7576554a346b3661586a2fa264697066735822122021ac5ee82e2a8950ebb96991762c640c8442227e8b4cf56a8fff3987d60c94f564736f6c634300080c0033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
