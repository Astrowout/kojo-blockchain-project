{
  "_format": "hh-sol-artifact-1",
  "contractName": "KojoUtils",
  "sourceName": "contracts/utils/KojoUtils.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "levelCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "level",
          "type": "uint256"
        }
      ],
      "name": "calculateParticipantLevelCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "experiencePoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "plantIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "allowedTokenBalance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPresent",
              "type": "bool"
            }
          ],
          "internalType": "struct Structs.Participant",
          "name": "participant",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "levelCost",
          "type": "uint256"
        }
      ],
      "name": "handleAddXPToParticipant",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "experiencePoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "plantIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "allowedTokenBalance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPresent",
              "type": "bool"
            }
          ],
          "internalType": "struct Structs.Participant",
          "name": "_participant",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "typeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "experiencePoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lifes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "levelCost",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPresent",
              "type": "bool"
            }
          ],
          "internalType": "struct Structs.Plant",
          "name": "plant",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "handleAddXPToPlant",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "typeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "experiencePoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lifes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "levelCost",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPresent",
              "type": "bool"
            }
          ],
          "internalType": "struct Structs.Plant",
          "name": "_plant",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "typeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "experiencePoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lifes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "levelCost",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPresent",
              "type": "bool"
            }
          ],
          "internalType": "struct Structs.Plant",
          "name": "plant",
          "type": "tuple"
        }
      ],
      "name": "handleBuildURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "experiencePoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "plantIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "allowedTokenBalance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPresent",
              "type": "bool"
            }
          ],
          "internalType": "struct Structs.Participant",
          "name": "participant",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "handleCalculateAllowedTokenBalanceFromParticipantLevel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "experiencePoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "plantIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "allowedTokenBalance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPresent",
              "type": "bool"
            }
          ],
          "internalType": "struct Structs.Participant",
          "name": "participant",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "handleRemoveTokenIdFromParticipant",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "level",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "experiencePoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "plantIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "allowedTokenBalance",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isPresent",
              "type": "bool"
            }
          ],
          "internalType": "struct Structs.Participant",
          "name": "_participant",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "x",
          "type": "address"
        }
      ],
      "name": "toString",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610e34806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637182817b1161005b5780637182817b146101295780639199a30b1461013c578063b13a4dce1461014f578063ffa029dd1461016f57600080fd5b80632424a0e91461008257806356ca623e146100a8578063691fa646146100c8575b600080fd5b610095610090366004610893565b610182565b6040519081526020015b60405180910390f35b6100bb6100b63660046108b5565b6101ad565b60405161009f919061090e565b6100db6100d6366004610a25565b6101c9565b60405161009f9190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a0830151151560a083015292915050565b6100bb610137366004610a50565b610277565b61009561014a366004610b4a565b61042d565b61016261015d366004610b8f565b610467565b60405161009f9190610bdd565b61016261017d366004610b4a565b6104ed565b600080610190600184610c84565b61019b90600a610c9b565b6101a59085610cba565b949350505050565b60606101c3826001600160a01b031660146105f9565b92915050565b6102046040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b81836040018181516102169190610cba565b9052506080830151604084015160009161022f91610ce8565b61023a906001610cba565b905060018111801561024d575060058111155b1561025e576020840181905261026f565b600581111561026f57600560208501525b509192915050565b60608160a001516102c75760405162461bcd60e51b8152602060048201526015602482015274283630b73a103237b2b9903737ba1032bc34b9ba1760591b60448201526064015b60405180910390fd5b8160200151600114806102de575081602001516002145b806102ed575081602001516003145b806102fc575081602001516004145b8061030b575081602001516005145b6103575760405162461bcd60e51b815260206004820152601b60248201527f506c616e74206c6576656c20646f6573206e6f742065786973742e000000000060448201526064016102be565b81606001516001148061036e575081606001516002145b8061037d575081606001516003145b6103c95760405162461bcd60e51b815260206004820152601b60248201527f506c616e74206c6966657320646f6573206e6f742065786973742e000000000060448201526064016102be565b6000604051806080016040528060448152602001610dbb6044913990506000816103f68560000151610795565b6104038660200151610795565b60405160200161041593929190610cfc565b60408051601f19818403018152919052949350505050565b6000600a600184600001516104429190610c84565b61044c9084610c9b565b6104569190610ce8565b6104609083610cba565b9392505050565b6104a26040518060c0016040528060008152602001600081526020016000815260200160608152602001600081526020016000151581525090565b82846020018181516104b49190610cba565b90525060208401516000906104ca908490610ce8565b6104d5906001610cba565b905060018111156104e4578085525b50929392505050565b6105286040518060c0016040528060008152602001600081526020016000815260200160608152602001600081526020016000151581525090565b6000600184606001515161053c9190610c84565b67ffffffffffffffff81111561055457610554610941565b60405190808252806020026020018201604052801561057d578160200160208202803683370190505b50905060005b8460600151518110156105ec576000856060015182815181106105a8576105a8610d5e565b602002602001015190508481146105d957808383815181106105cc576105cc610d5e565b6020026020010181815250505b50806105e481610d74565b915050610583565b5060608401525090919050565b60606000610608836002610c9b565b610613906002610cba565b67ffffffffffffffff81111561062b5761062b610941565b6040519080825280601f01601f191660200182016040528015610655576020820181803683370190505b509050600360fc1b8160008151811061067057610670610d5e565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061069f5761069f610d5e565b60200101906001600160f81b031916908160001a90535060006106c3846002610c9b565b6106ce906001610cba565b90505b6001811115610746576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061070257610702610d5e565b1a60f81b82828151811061071857610718610d5e565b60200101906001600160f81b031916908160001a90535060049490941c9361073f81610d8f565b90506106d1565b5083156104605760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102be565b6060816107b95750506040805180820190915260018152600360fc1b602082015290565b8160005b81156107e357806107cd81610d74565b91506107dc9050600a83610ce8565b91506107bd565b60008167ffffffffffffffff8111156107fe576107fe610941565b6040519080825280601f01601f191660200182016040528015610828576020820181803683370190505b5090505b84156101a55761083d600183610c84565b915061084a600a86610da6565b610855906030610cba565b60f81b81838151811061086a5761086a610d5e565b60200101906001600160f81b031916908160001a90535061088c600a86610ce8565b945061082c565b600080604083850312156108a657600080fd5b50508035926020909101359150565b6000602082840312156108c757600080fd5b81356001600160a01b038116811461046057600080fd5b60005b838110156108f95781810151838201526020016108e1565b83811115610908576000848401525b50505050565b602081526000825180602084015261092d8160408501602087016108de565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561097a5761097a610941565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156109a9576109a9610941565b604052919050565b803580151581146109c157600080fd5b919050565b600060c082840312156109d857600080fd5b6109e0610957565b90508135815260208201356020820152604082013560408201526060820135606082015260808201356080820152610a1a60a083016109b1565b60a082015292915050565b60008060e08385031215610a3857600080fd5b610a4284846109c6565b9460c0939093013593505050565b600060c08284031215610a6257600080fd5b61046083836109c6565b600060c08284031215610a7e57600080fd5b610a86610957565b9050813581526020808301358183015260408301356040830152606083013567ffffffffffffffff80821115610abb57600080fd5b818501915085601f830112610acf57600080fd5b813581811115610ae157610ae1610941565b8060051b9150610af2848301610980565b8181529183018401918481019088841115610b0c57600080fd5b938501935b83851015610b2a57843582529385019390850190610b11565b6060870152505050505060808281013590820152610a1a60a083016109b1565b60008060408385031215610b5d57600080fd5b823567ffffffffffffffff811115610b7457600080fd5b610b8085828601610a6c565b95602094909401359450505050565b600080600060608486031215610ba457600080fd5b833567ffffffffffffffff811115610bbb57600080fd5b610bc786828701610a6c565b9660208601359650604090950135949350505050565b6000602080835260e0830184518285015281850151604085015260408501516060850152606085015160c06080860152818151808452610100870191508483019350600092505b80831015610c445783518252928401926001929092019190840190610c24565b50608087015160a087015260a08701519350610c6460c087018515159052565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610c9657610c96610c6e565b500390565b6000816000190483118215151615610cb557610cb5610c6e565b500290565b60008219821115610ccd57610ccd610c6e565b500190565b634e487b7160e01b600052601260045260246000fd5b600082610cf757610cf7610cd2565b500490565b60008451610d0e8184602089016108de565b845190830190610d228183602089016108de565b602d60f81b91019081528351610d3f8160018401602088016108de565b64173539b7b760d91b6001929091019182015260060195945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610d8857610d88610c6e565b5060010190565b600081610d9e57610d9e610c6e565b506000190190565b600082610db557610db5610cd2565b50069056fe68747470733a2f2f697066732e696f2f697066732f516d536d76347648463678735479784b4a4d774e55733872347252454e7a54693366437a65735553637a537156742fa2646970667358221220259d1a3d3d8368b567937f87d6fc5525036bf186e84d4ff571c49f857168c39364736f6c634300080c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80637182817b1161005b5780637182817b146101295780639199a30b1461013c578063b13a4dce1461014f578063ffa029dd1461016f57600080fd5b80632424a0e91461008257806356ca623e146100a8578063691fa646146100c8575b600080fd5b610095610090366004610893565b610182565b6040519081526020015b60405180910390f35b6100bb6100b63660046108b5565b6101ad565b60405161009f919061090e565b6100db6100d6366004610a25565b6101c9565b60405161009f9190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a0830151151560a083015292915050565b6100bb610137366004610a50565b610277565b61009561014a366004610b4a565b61042d565b61016261015d366004610b8f565b610467565b60405161009f9190610bdd565b61016261017d366004610b4a565b6104ed565b600080610190600184610c84565b61019b90600a610c9b565b6101a59085610cba565b949350505050565b60606101c3826001600160a01b031660146105f9565b92915050565b6102046040518060c0016040528060008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b81836040018181516102169190610cba565b9052506080830151604084015160009161022f91610ce8565b61023a906001610cba565b905060018111801561024d575060058111155b1561025e576020840181905261026f565b600581111561026f57600560208501525b509192915050565b60608160a001516102c75760405162461bcd60e51b8152602060048201526015602482015274283630b73a103237b2b9903737ba1032bc34b9ba1760591b60448201526064015b60405180910390fd5b8160200151600114806102de575081602001516002145b806102ed575081602001516003145b806102fc575081602001516004145b8061030b575081602001516005145b6103575760405162461bcd60e51b815260206004820152601b60248201527f506c616e74206c6576656c20646f6573206e6f742065786973742e000000000060448201526064016102be565b81606001516001148061036e575081606001516002145b8061037d575081606001516003145b6103c95760405162461bcd60e51b815260206004820152601b60248201527f506c616e74206c6966657320646f6573206e6f742065786973742e000000000060448201526064016102be565b6000604051806080016040528060448152602001610dbb6044913990506000816103f68560000151610795565b6104038660200151610795565b60405160200161041593929190610cfc565b60408051601f19818403018152919052949350505050565b6000600a600184600001516104429190610c84565b61044c9084610c9b565b6104569190610ce8565b6104609083610cba565b9392505050565b6104a26040518060c0016040528060008152602001600081526020016000815260200160608152602001600081526020016000151581525090565b82846020018181516104b49190610cba565b90525060208401516000906104ca908490610ce8565b6104d5906001610cba565b905060018111156104e4578085525b50929392505050565b6105286040518060c0016040528060008152602001600081526020016000815260200160608152602001600081526020016000151581525090565b6000600184606001515161053c9190610c84565b67ffffffffffffffff81111561055457610554610941565b60405190808252806020026020018201604052801561057d578160200160208202803683370190505b50905060005b8460600151518110156105ec576000856060015182815181106105a8576105a8610d5e565b602002602001015190508481146105d957808383815181106105cc576105cc610d5e565b6020026020010181815250505b50806105e481610d74565b915050610583565b5060608401525090919050565b60606000610608836002610c9b565b610613906002610cba565b67ffffffffffffffff81111561062b5761062b610941565b6040519080825280601f01601f191660200182016040528015610655576020820181803683370190505b509050600360fc1b8160008151811061067057610670610d5e565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061069f5761069f610d5e565b60200101906001600160f81b031916908160001a90535060006106c3846002610c9b565b6106ce906001610cba565b90505b6001811115610746576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061070257610702610d5e565b1a60f81b82828151811061071857610718610d5e565b60200101906001600160f81b031916908160001a90535060049490941c9361073f81610d8f565b90506106d1565b5083156104605760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102be565b6060816107b95750506040805180820190915260018152600360fc1b602082015290565b8160005b81156107e357806107cd81610d74565b91506107dc9050600a83610ce8565b91506107bd565b60008167ffffffffffffffff8111156107fe576107fe610941565b6040519080825280601f01601f191660200182016040528015610828576020820181803683370190505b5090505b84156101a55761083d600183610c84565b915061084a600a86610da6565b610855906030610cba565b60f81b81838151811061086a5761086a610d5e565b60200101906001600160f81b031916908160001a90535061088c600a86610ce8565b945061082c565b600080604083850312156108a657600080fd5b50508035926020909101359150565b6000602082840312156108c757600080fd5b81356001600160a01b038116811461046057600080fd5b60005b838110156108f95781810151838201526020016108e1565b83811115610908576000848401525b50505050565b602081526000825180602084015261092d8160408501602087016108de565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561097a5761097a610941565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156109a9576109a9610941565b604052919050565b803580151581146109c157600080fd5b919050565b600060c082840312156109d857600080fd5b6109e0610957565b90508135815260208201356020820152604082013560408201526060820135606082015260808201356080820152610a1a60a083016109b1565b60a082015292915050565b60008060e08385031215610a3857600080fd5b610a4284846109c6565b9460c0939093013593505050565b600060c08284031215610a6257600080fd5b61046083836109c6565b600060c08284031215610a7e57600080fd5b610a86610957565b9050813581526020808301358183015260408301356040830152606083013567ffffffffffffffff80821115610abb57600080fd5b818501915085601f830112610acf57600080fd5b813581811115610ae157610ae1610941565b8060051b9150610af2848301610980565b8181529183018401918481019088841115610b0c57600080fd5b938501935b83851015610b2a57843582529385019390850190610b11565b6060870152505050505060808281013590820152610a1a60a083016109b1565b60008060408385031215610b5d57600080fd5b823567ffffffffffffffff811115610b7457600080fd5b610b8085828601610a6c565b95602094909401359450505050565b600080600060608486031215610ba457600080fd5b833567ffffffffffffffff811115610bbb57600080fd5b610bc786828701610a6c565b9660208601359650604090950135949350505050565b6000602080835260e0830184518285015281850151604085015260408501516060850152606085015160c06080860152818151808452610100870191508483019350600092505b80831015610c445783518252928401926001929092019190840190610c24565b50608087015160a087015260a08701519350610c6460c087018515159052565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610c9657610c96610c6e565b500390565b6000816000190483118215151615610cb557610cb5610c6e565b500290565b60008219821115610ccd57610ccd610c6e565b500190565b634e487b7160e01b600052601260045260246000fd5b600082610cf757610cf7610cd2565b500490565b60008451610d0e8184602089016108de565b845190830190610d228183602089016108de565b602d60f81b91019081528351610d3f8160018401602088016108de565b64173539b7b760d91b6001929091019182015260060195945050505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610d8857610d88610c6e565b5060010190565b600081610d9e57610d9e610c6e565b506000190190565b600082610db557610db5610cd2565b50069056fe68747470733a2f2f697066732e696f2f697066732f516d536d76347648463678735479784b4a4d774e55733872347252454e7a54693366437a65735553637a537156742fa2646970667358221220259d1a3d3d8368b567937f87d6fc5525036bf186e84d4ff571c49f857168c39364736f6c634300080c0033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
